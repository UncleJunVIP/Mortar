version: '3'

vars:
  IMAGE_NAME: mortar-miyoo-builder
  BUILD_DIR: ./build/miyoo
  DOCKERFILE: miyoo.Dockerfile

tasks:
  default:
    cmds:
      - task: build

  pull-toolchain:
    desc: Pull the official Miyoo Mini Plus toolchain
    cmds:
      - echo "Pulling Miyoo Mini Plus toolchain..."
      - docker pull ghcr.io/onionui/miyoomini-toolchain:latest
      - echo "Toolchain ready!"

  build:
    desc: Build for Miyoo Mini Plus using official toolchain
    deps: [pull-toolchain]
    cmds:
      - task: docker-build
      - task: extract-files
      - task: list-output

  docker-build:
    desc: Build using Miyoo Mini Plus toolchain
    cmds:
      - echo "Building for Miyoo Mini Plus..."
      - docker build -f {{.DOCKERFILE}} -t {{.IMAGE_NAME}} .

  extract-files:
    desc: Extract Miyoo-specific binaries and libraries
    vars:
      CONTAINER_ID:
        sh: docker create {{.IMAGE_NAME}}
    cmds:
      - echo "Creating temporary container..."
      - mkdir -p {{.BUILD_DIR}}
      - echo "Copying Miyoo binary..."
      - docker cp {{.CONTAINER_ID}}:/app/bin/mortar-miyoo {{.BUILD_DIR}}/
      - echo "Copying configuration files..."
      - docker cp {{.CONTAINER_ID}}:/app/config.json {{.BUILD_DIR}}/ || echo "No config.json found"
      - docker cp {{.CONTAINER_ID}}:/app/config.yml {{.BUILD_DIR}}/ || echo "No config.yml found"
      - echo "Copying Miyoo libraries..."
      - docker cp {{.CONTAINER_ID}}:/app/lib/miyoo {{.BUILD_DIR}}/lib/ 2>/dev/null || echo "No libraries to copy"
      - echo "Cleaning up container..."
      - docker rm {{.CONTAINER_ID}}

  list-output:
    desc: List the Miyoo Mini Plus build output
    cmds:
      - echo "Miyoo Mini Plus build completed! Files in {{.BUILD_DIR}}"
      - echo "=== Binary ==="
      - ls -la {{.BUILD_DIR}}/mortar-miyoo* || echo "No binary found!"
      - echo "Binary details:"
      - file {{.BUILD_DIR}}/mortar-miyoo* 2>/dev/null || echo "Binary not found"
      - echo "=== Configuration Files ==="
      - ls -la {{.BUILD_DIR}}/*.json {{.BUILD_DIR}}/*.yml 2>/dev/null || echo "No config files found"
      - echo "=== Libraries ==="
      - ls -la {{.BUILD_DIR}}/lib/ 2>/dev/null || echo "No Miyoo libraries found"

  analyze:
    desc: Analyze the Miyoo binary dependencies in detail
    cmds:
      - echo "Analyzing Miyoo Mini Plus binary dependencies..."
      - docker run --rm {{.IMAGE_NAME}} bash -c 'echo "=== Binary Architecture Info ==="; file /app/bin/mortar-miyoo; echo ""; echo "=== Dynamic Dependencies ==="; readelf -d /app/bin/mortar-miyoo | grep NEEDED || echo "No dynamic dependencies found"; echo ""; echo "=== GLIBC Version Requirements ==="; readelf -V /app/bin/mortar-miyoo | grep -E "GLIBC|Version" | head -10 || echo "No version info"; echo ""; echo "=== Available Miyoo Libraries ==="; ls -la /app/lib/miyoo/ 2>/dev/null || echo "No libraries found in container"; echo ""; echo "=== Toolchain Info ==="; arm-linux-gnueabihf-gcc --version | head -1;'

  clean:
    desc: Clean up Miyoo build artifacts
    cmds:
      - echo "Cleaning up Miyoo build..."
      - rm -rf {{.BUILD_DIR}}
      - docker rmi {{.IMAGE_NAME}} 2>/dev/null || echo "Image not found"
      - echo "Miyoo build cleaned!"

  info:
    desc: Show information about the Miyoo toolchain
    cmds:
      - echo "Miyoo Mini Plus Build Tasks:"
      - echo "  task --taskfile taskfile.miyoo.yml build     # Build for Miyoo"
      - echo "  task --taskfile taskfile.miyoo.yml analyze   # Analyze dependencies"
      - echo "  task --taskfile taskfile.miyoo.yml deploy    # Deploy via ADB"
      - echo "  task --taskfile taskfile.miyoo.yml clean     # Clean up"